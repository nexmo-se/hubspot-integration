<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Create New Template</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT"
      crossorigin="anonymous"
    />
    <script>
      function getNumberParams(text) {
        return text.match(/[{{]/gi)?.length / 2;
      }
      function formatTemplate(template) {
        let headerParams, urlNeeded, headerText;
        try {
          const phone = req.query.phone;
          const templName = template.name;
          const templateLanguage = template.language;
          const header = template.components.find((e) => e.type === 'HEADER');
          const headerNeedsInput =
            header?.format === 'TEXT' || header?.format === 'IMAGE' || header?.format === 'VIDEO' || header?.format === 'FILE';
          if (headerNeedsInput) {
            if (header.format === 'TEXT') {
              headerText = header.text;
              headerParams = getNumberParams(header.text);
            } else urlNeeded = true;
          }
          const templateToFill = {
            templateText: templText,
            numberParams: getNumberParams(templText),
            headerParams: headerParams,
            urlNeeded: urlNeeded,
            headerType: header?.format,
            headerText: headerText,
          };
        } catch (e) {
          console.log(e);
        }
      }

      async function postFormDataAsJson({ url, formData }) {
        const plainFormData = Object.fromEntries(formData.entries());
        const formDataJsonString = JSON.stringify(plainFormData);
        const fetchOptions = {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            Accept: 'application/json',
          },
          body: { formDataJsonString },
        };
        const response = await fetch(url, fetchOptions);
        if (!response.ok) {
          const errorMessage = await response.text();
          throw new Error(errorMessage);
        }
        return response.json();
      }
      async function handleSubmit(event) {
        event.preventDefault();
        const to = document.getElementById('senderIdField').innerText;
        const text = document.getElementById('text').value;
        console.log(to, text);
        const data = { to, text };
        const fetchOptions = {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            Accept: 'application/json',
          },
          body: JSON.stringify(data),
        };

        const form = event.currentTarget;
        const url = form.action;
        try {
          //   const formData = new FormData(form);
          //  const responseData = await postFormDataAsJson({ url, formData });
          const responseData = await fetch(url, fetchOptions);
          const jsonResponse = await responseData.json();
          console.log(responseData);
          createToast();
          //   if (responseData.status === '200') createToast();
          if (responseData.status === 200) window.parent.postMessage(JSON.stringify({ action: 'DONE' }), '*');
          //   else window.parent.postMessage(JSON.stringify({ action: 'CANCEL' }), '*');
          //   window.parent.postMessage(JSON.stringify({ action: 'DONE' }), '*');
        } catch (error) {
          console.error(error);
        }
      }

      const createToast = () => {
        const string = `<div class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
          <strong class="mr-auto">Bootstrap</strong>
          <small>11 mins ago</small>
          <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="toast-body">
          Hello, world! This is a toast message.
        </div>
      </div>`;
        const form = document.getElementById('mainForm');
        form.insertAdjacentHTML('afterbegin', string);
      };
    </script>
  </head>
  <body>
    <div class="container">
      <div class="row">
        <div class="col">
          <h1 class="mt-3">Send Message</h1>
          <form id="mainForm" method="post" action="/sendMessage">
            <div class="mb-3">
              <label for="senderIdField" class="form-label"
                >To:

                <span style="color: rgb(203, 144, 144)" id="senderIdField"><%= to %></span>
              </label>
            </div>
            <div class="mb-3">
              <label for="text" class="form-label">SMS Text</label>
              <textarea maxlength="4096" class="form-control" id="text" name="text" aria-describedby="textHelp" rows="3"></textarea>
            </div>
            <button type="submit" class="btn btn-primary float-end">Submit</button>
          </form>
        </div>
      </div>
    </div>

    <script>
      const mainForm = document.getElementById('mainForm');
      mainForm.addEventListener('submit', handleSubmit);
    </script>
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8"
      crossorigin="anonymous"
    ></script>
  </body>
</html>
